# OpenBioCure Backend Makefile
# Simple commands to replace all bash scripts

.PHONY: install start stop test health logs clean

# Install dependencies for all services
install:
	@echo "📦 Installing dependencies for all services..."
	cd auth-service && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt
	cd analytics-service && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt
	cd api-gateway && python3 -m venv venv && source venv/bin/activate && pip install -r requirements.txt
	@echo "✅ All dependencies installed"

# Start all services using honcho
start:
	@echo "🚀 Starting all OpenBioCure services..."
	~/Library/Python/3.9/bin/honcho start

# Alternative: Start services individually
start-dev:
	@echo "🚀 Starting services in development mode..."
	cd auth-service && source venv/bin/activate && python3 -m uvicorn main:app --host 0.0.0.0 --port 8001 --reload &
	cd analytics-service && source venv/bin/activate && python3 -m uvicorn main:app --host 0.0.0.0 --port 8002 --reload &
	cd api-gateway && source venv/bin/activate && python3 -m uvicorn main:app --host 0.0.0.0 --port 8000 --reload &
	@echo "✅ All services started in background"

# Stop all services
stop:
	@echo "🛑 Stopping all services..."
	@pkill -f "uvicorn.*8001" || true
	@pkill -f "uvicorn.*8002" || true
	@pkill -f "uvicorn.*8000" || true
	@pkill -f "honcho" || true
	@echo "✅ All services stopped"

# Run health checks
health:
	@echo "🔍 Checking service health..."
	@curl -s http://localhost:8001/health | jq . || echo "❌ Auth service down"
	@curl -s http://localhost:8002/health | jq . || echo "❌ Analytics service down"  
	@curl -s http://localhost:8000/health | jq . || echo "❌ Gateway service down"

# Run tests
test:
	@echo "🧪 Running tests..."
	@python3 -m pytest tests/ || echo "⚠️ No tests found"

# View logs (requires running services)
logs:
	@echo "📋 Service logs:"
	@echo "Auth: tail -f auth-service/logs/app.log"
	@echo "Analytics: tail -f analytics-service/logs/app.log" 
	@echo "Gateway: tail -f api-gateway/logs/app.log"

# Clean up virtual environments and logs
clean:
	@echo "🧹 Cleaning up..."
	rm -rf auth-service/venv analytics-service/venv api-gateway/venv
	rm -rf auth-service/logs analytics-service/logs api-gateway/logs
	rm -rf **/__pycache__ **/*.pyc
	@echo "✅ Cleanup complete"

# Setup development environment
setup:
	@echo "🛠️ Setting up development environment..."
	python3 -m pip install honcho supervisor httpx pytest
	$(MAKE) install
	@echo "✅ Development environment ready"

# Quick start (setup + start)
dev:
	$(MAKE) setup
	$(MAKE) start
